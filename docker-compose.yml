version: '3.8'

services:
    postgres:
        image: postgres:15
        restart: always
        shm_size: 128mb
        container_name: postgres_db
        environment:
            POSTGRES_USER: ${DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_DB: ${DATABASE_NAME}
        ports:
            - "5432:5432"
        volumes:
            - pg_data:/var/lib/postgresql/data

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq_server
        restart: always
        ports:
            - "5672:5672"   # Protocol AMQP
            - "15672:15672" # Management interface
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq

    nginx:
        image: nginx:latest
        ports:
            - "80:80"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - app

    app:
        container_name: api
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        depends_on:
            - postgres
            - rabbitmq
        volumes:
            - ./app:/app
        environment:
            SPRING_PROFILES_ACTIVE: default
            DATABASE_URL: ${DATABASE_URL}
            DATABASE_USERNAME: ${DATABASE_USERNAME}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            MAIL_HOST: ${MAIL_HOST}
            MAIL_USERNAME: ${MAIL_USERNAME}
            MAIL_PASSWORD: ${MAIL_PASSWORD}
            MAIL_PROTOCOL: ${MAIL_PROTOCOL}
            MAIL_PORT: ${MAIL_PORT}
            JWT_SECRET: ${JWT_SECRET}
            PAYMENTS_GENERATION_QUEUE: ${PAYMENTS_GENERATION_QUEUE}
            PAYMENTS_EDITION_QUEUE: ${PAYMENTS_EDITION_QUEUE}
            PENDING_PAYMENT_NOTIFICATION_TIME: ${PENDING_PAYMENT_NOTIFICATION_TIME}
            RABBITMQ_HOST: ${RABBITMQ_HOST}
            RABBITMQ_PORT: ${RABBITMQ_PORT}
            RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
            RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}

volumes:
    pg_data:
    rabbitmq_data:
